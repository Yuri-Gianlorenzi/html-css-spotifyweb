/* REGOLE GENERALI */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Montserrat', sans-serif;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: #999999;
}

a:hover {
  color: white;
}

/* WARNING colori */
.blue {
  background-color: blue;
}

.red {
  background-color: red;
}

.violet {
  background-color: violet;
}

.clr_gray {
  color: #999999;
}

.font-big {
  font-size: 30px;
}

/* / REGOLE GENERALI */

/* WARNING BOTTONI */
/* .btn {
  padding: 10px 40px;
  border-radius: 40px;
  border: 1px solid white;
} */


 .btn {
  color: #c2c3c4;
  font-size: 12px;
  text-transform: uppercase;
  text-decoration: none;
  margin-right: 40px;
  padding: 20px 40px;
  border-radius: 40px;
  border: 1px solid #c2c3c4;
  transition: transform .2s;
}

/* per far in modo che al bottone ci sia un hover con transform */
a.btn:hover  {
  display: inline-block;
  transform: scale(1.1);
  color: white;
  border: 1px solid white;
}


/* / BOTTONI */

/* qui creiamo il container che terrà la nostraviewport */
#wrapper {
  height: 100vh;
  width: 100%;
  background-color: yellow;
  overflow: hidden;
}

/* bisogna dare flex al main, che è il padre dei nostri contenitori principali, inoltre gli viene data un'altezza che deve tenere conto del footer, il quale sarà fixed */

main {
  display: flex;
  height: calc(100% - 90px);
}


/* WARNING MAIN NAV */

/* la main nav è la nostra colonna sinistra, ha una larghezza fissa fino ai 600px, al di sotto di questa deve rimpicciolirsi e far sparire alcuni contenuti al suo interno. l'altezza deve essere 100%
Gli viene dato un display flex e una direzione in colonne, grazie ai flex poi riusciamo a suddividere la nostra nav con i contenitori-figli che vogliamo */
nav#main_nav {
  width: 250px;
  height: 100%;
  background-color: black;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 20px;
}

/* per rimpicciolire la main-nav al di sotto dei 600px */
@media screen and (max-width: 600px) {
  nav#main_nav {
    width: 50px;
    padding: 10px;
  }
}

/* per distanziare il logo dal menu */
.nav_logo {
  margin-bottom: 20px;
}

/* per nascondere il logo small sopra i 600px */
.nav_logo .logo_small {
  display: none;
}

/* per cambiare i loghi quando si passa alla versione mobile */
@media screen and (max-width: 600px) {

  /* logo piccolo */
  .nav_logo .logo_small {
    display: block;
  }

  /* logo grande */
  .nav_logo .logo_big {
    display: none;
  }

}

/* per distanziare la lista menu */
.nav_menu ul li {
  padding-bottom: 10px;
}

/* ridimensioniamo le immagini del nav-menu e gli diamo un opacity*/
#main_nav .nav_menu img {
  height: 30px;
  vertical-align: middle;
  margin-right: 10px;
  opacity: 0.5;
}

/* per fare in modo che anche le immagini diventino bianche quando passiamo sopra il collegamento */
#main_nav .nav_menu ul li a:hover img {
  opacity: 1;
}

/* #main_nav .nav_menu ul li.select {
  border-left: 2px solid #adff2f;
} */


/* creiamo la classe nav-playlist-create per far si che lo scroll verticale riguardi soltanto l'elenco delle playlist create */
#main_nav .nav_playlist_create h3 {
  text-transform: uppercase;
  padding: 10px 0;
  color: white;
}

#main_nav .nav_playlist_create a i {
  font-size: 40px;
  vertical-align: middle;
  padding-right: 20px;
}


/* grazie ai flex, in particolare flex-grow facciamo in modo che la parte della nav riguardante la playlist si prenda lo spazio lasciato libero dagli altri contenitori della sezione
qui bisogna inserire l'overrflow per far si chhe si crei la scrollbar verticale quando il contenuto va oltre la dimensione del contenitore. gli viene data una min height per far si che la nav-bottom torni su quando ridimensioniamo solo fino ad un certo punto */
.nav_playlist {
  flex-grow: 1;
  overflow-y: auto;
  min-height: 50px;
}

/* per distanziare gli elementi della playlist */
.nav_playlist ul li {
  padding: 10px 0px;
}


/* per far scomparire la playlist e le scritte didascaliche quando la nav-main si rimpicciolisce */
@media screen and (max-width: 600px) {
  #main_nav .nav_playlist_create,
  #main_nav .nav_playlist {
    display: none;
  }

  /* per eliminare le scritte didascaliche anche dalla nav-bottom */
  #main_nav .hidden_small {
    display: none;
  }

  /* per fare in modo che una volta sparita la sezione playlist, il nav menu si prenda tutto lo spazio vuoto, senza lasciare che le 3 icone del menu rimangano in centro alla nav */
  #main_nav .nav_menu {
    flex-grow: 1;
  }

  .install_nav a img {
    padding-left: 4px;
  }

}


/* nav bottom */

/* per creare la linea che separa i 2 contenitori di questa sezione */
#main_nav .nav_bottom .install_nav {
  border-bottom: 1px solid #999999;
  line-height: 40px;
}

#main_nav .nav_bottom .install_nav a {
  padding: 5px 0;

}

/* diamo una grandezza all'immagine e un opacità per creare l'wffwtto voluto con l'hover */
#main_nav .nav_bottom .install_nav img {
  height: 20px;
  vertical-align: middle;
  margin-right: 20px;
  opacity: 0.5;
}

/* diamo opacity 1 a tutto il collegamento quando passiamo sopra con mouse */
#main_nav .nav_bottom .install_nav a:hover img {
  opacity: 1;
}

#main_nav .nav_bottom .profile_nav {
  padding: 10px 0;
}

#main_nav .nav_bottom .profile_nav img {
  height: 30px;
  vertical-align: middle;
  margin-right: 20px;
  border-radius: 50%;
}

@media screen and (max-width: 600px) {

  #main_nav .nav_bottom .install_nav img,
  #main_nav .nav_bottom .profile_nav img {
    /* text-align: center; */
    /* margin-right: 0px; */
  }

}

/* WARNING MAIN CONTENT */

/* il main-content deve avere una larghezza calcolata tenendo conto della larghezza della main-nav, l'altezza diamo 100% perchè prende come riferimento l'altezza del main
gli viene dato un padding-top di 100px, (se do margin la scrollbar laterale parte sotto la call-to-action) ovvero della stessa altezza della call-to-action, la quale è fixed*/
section#main_content {
  width: calc(100% - 250px);
  height: 100%;
  background-color: #141922;
  overflow: auto;
  padding-top: 100px;
}

/* per mantenere le stesse proporzioni quando la main-nav si rimpicciolisce a 50px */
@media screen and (max-width: 600px) {
  section#main_content {
    width: calc(100% - 50px);
  }
}


/* qui creiamo la sezione fixed in cima al main-content, gli viene dato lo z-index per fare in modo che rimanga sopra qualsiasi altro elemento della pagina, specialmente riguardo al footer*/
.call_to_action {
  position: fixed;
  top: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.64);
  width: calc(100% - 250px);
  height: 100px;
  text-align: right;
  vertical-align: middle;
  z-index: 1;

}

/* per mantenere le proporzioni della call-to-action quando la nav-main si rimpicciolisce */
@media screen and (max-width: 600px) {
  section#main_content .call_to_action {
    width: calc(100% - 50px);
  }
}

/* per specificare che il contenitore deve essere inline block, altrimenti non si riesce a fare la transform con l'hover, il margin è per centrarlo nella riga */
#main_content .call_to_action .upgrade {
  display: inline-block;
  margin-top: 20px;
}

/* per far sparire la call-to-action quando l'altezza del display diminuisce, togliamo anche il margine al main content */

@media screen and (max-height: 250px) {
  .call_to_action {
    display: none;
  }
  /* per alzare il padding del main content ina volta che scompare la call-to-action */
  section#main_content {
    padding-top: 10px;
  }
}


/* / MAIN CONTENT */

/* WARNING FOOTER */

/* il footer ha un'altezza fissa ed è fixed. per far si che vada sotto la call-to-action quando rimpiccioliamo l'altezza della pagina, dobbiamo dare z-index all'elemento in cima al main-content */
footer {
  width: 100%;
  height: 90px;
  position: fixed;
  bottom: 0;
  left: 0;
  background-color: green;
}


/* / FOOTER */
